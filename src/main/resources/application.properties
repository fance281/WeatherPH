spring.application.name=java
server.port=8080
spring.thymeleaf.cache=false

# OpenWeatherMap API Configuration
app.openweather.api=https://api.openweathermap.org/data/2.5/weather
app.openweather.key=21ad053d07630286a343b2b1fb151c79

# ===============================================
# DATABASE CONFIGURATION (Updated for Render/Cloud)
# ===============================================
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.open-in-view=false
spring.jpa.hibernate.ddl-auto=update

# ===============================================
# APP BASE URL CONFIGURATION
# ===============================================
# Must be set via Render Environment Variable to your public domain
app.base-url=https://weatherph-11.onrender.com


# ===============================================
# EMAIL SERVER CONFIGURATION (for Gmail)
# ===============================================
# Host and Port remain configured
spring.mail.host=smtp.gmail.com
spring.mail.port=587
# Your full Gmail address
spring.mail.username=enriquezlance25@gmail.com
# CRITICAL FIX: The hardcoded password line is REMOVED.
# Spring will now look for the environment variable: SPRING_MAIL_PASSWORD.

# Required properties for connecting to Gmail's SMTP server
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
